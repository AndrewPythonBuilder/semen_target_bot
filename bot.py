import time

from telegram.ext.dispatcher import run_async
from telegram import ReplyKeyboardMarkup, Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler, Job
import logging

import constants, base_work

updater = Updater(token=constants.TOKEN, use_context=True, workers=3)
dispatcher = updater.dispatcher

job_queue = updater.job_queue

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)


@run_async
def start(update, context):
    message = update.message
    bot = context.bot
    if message.chat.id in constants.admins:
        buttons = [['üëã–ò–∑–º–µ–Ω–∏—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'], ['–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'], ['üì©–†–∞—Å—Å—ã–ª–∫–∞']]
        keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –°–µ–º–µ–Ω, –Ω–∞–≥–∏–±–∞—Ç–µ–ª—å —Ç–∞—Ä–≥–µ—Ç–∞!', reply_markup=keyboard)
        constants.last_message = '–º–µ–Ω—é'
    else:
        if message.chat.id in base_work.get_all_ids():
            pass
        else:
            base_work.register_user(message.chat.id, message.chat.username)

        bot.send_message(message.chat.id, base_work.get_message())



@run_async
def answer_questions(update, context: CallbackContext):
    message = update.message
    bot = context.bot
    if message.chat.id in constants.admins:
        if message.text == 'üëã–ò–∑–º–µ–Ω–∏—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫–æ–µ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è')
            bot.send_message(message.chat.id, base_work.get_message())
            bot.send_message(message.chat.id, '–°–µ–º–µ–Ω –î–º–∏—Ç—Ä–∏–µ–≤–∏—á, –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüôã‚Äç‚ôÇÔ∏è')
            constants.last_message = '–≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ'
        elif message.text == 'üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            buttons = [['üëã–ò–∑–º–µ–Ω–∏—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'], ['–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'], ['üì©–†–∞—Å—Å—ã–ª–∫–∞']]
            keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
            bot.send_message(message.chat.id, '–ß–µ–º –∂–µ –∑–∞–π–º–µ–º—Å—è?', reply_markup=keyboard)
            constants.last_message = '–º–µ–Ω—é'
        elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ':
            bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫–æ–µ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è')
            bot.send_message(message.chat.id, base_work.get_endl_message())
            buttons = [['üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]
            keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
            bot.send_message(message.chat.id,
                             '–°–µ–º–µ–Ω –î–º–∏—Ç—Ä–∏–µ–≤–∏—á, –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–≤–æ–µ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                             reply_markup=keyboard)
            constants.last_message = '–æ—Ç–≤–µ—Ç'
        elif message.text == 'üì©–†–∞—Å—Å—ã–ª–∫–∞':
            buttons = [['üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]
            keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
            bot.send_message(message.chat.id,
                             '–°–µ–º–µ–Ω –î–º–∏—Ç—Ä–∏–µ–≤–∏—á, –Ω–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—åüìü',
                             reply_markup=keyboard)
            constants.last_message = '—Ä–∞—Å—Å—ã–ª–∫–∞'
        elif constants.last_message == '—Ä–∞—Å—Å—ã–ª–∫–∞':
            bot_mailing(message.message_id, message.chat.id, base_work.get_all_ids())
            bot.send_message(message.chat.id, 'üìç–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å...')
        elif constants.last_message == '–æ—Ç–≤–µ—Ç':
            base_work.edit_endl_message(message.text)
            bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ, –°–ï–ú–ê, —Ç—ã —É–º–Ω–∏—á–∫–∞!')
        elif constants.last_message == '–≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ':
            base_work.edit_message(message.text)
            bot.send_message(message.chat.id, 'üéâ–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ')
        else:
            constants.last_message = '–º–µ–Ω—é'
            bot.send_message(message.chat.id, '‚ù§Ô∏è–°–µ–º–µ–Ω –î–º–∏—Ç—Ä–∏–µ–≤–∏—á, –∏–¥–∏—Ç–µ –Ω–∞—Ö—É–π...')
    else:
        bot.forward_message(message_id=message.message_id, from_chat_id=message.chat.id, chat_id=constants.admins[0])
        buttons = [[InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', url='https://t.me/'+str(message.chat.username))]]
        reply_markup = InlineKeyboardMarkup(buttons)
        bot.send_message(constants.admins[0], '–ù–∞–ø–∏—Å–∞—Ç—å', reply_markup=reply_markup)
        bot.send_message(message.chat.id, base_work.get_endl_message())


@run_async
def bot_mailing(message_id, chat_id, ids):
    bot = Bot(token=constants.TOKEN)
    for i in range(len(ids)):
        if (i != 0) and (i % 20 == 0):
            time.sleep(20)
        try:
            bot.forward_message(chat_id=ids[i], from_chat_id=chat_id, message_id=message_id)
        except:
            pass

    bot.send_message(chat_id, '‚úÖ–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')


start_handler = CommandHandler('start', start)
answer_handler = MessageHandler(Filters.all, answer_questions)
dispatcher.add_handler(start_handler)
dispatcher.add_handler(answer_handler)
updater.start_polling(timeout=5, clean=True)
